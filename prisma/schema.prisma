// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Token {
  
  id                                Int                             @id @default(autoincrement())
  uuid                              String                          @unique @default(uuid())

  username                          String                          @unique
  pass                              String
  password                          String
  
  createdAt                         DateTime                        @default(now())
  updatedAt                         DateTime                        @updatedAt

}

model Bin {
   
  id                                Int                             @id @default(autoincrement())
  uuid                              String                          @unique @default(uuid())

  name                              String                          @unique
  location                          String?
  binUrl                            String?                     
  filename                          String?                         @db.Text
  document                          Documentation[]
  notification                      Notification[]
  analytics                         Analytics[]
  
  createdAt                         DateTime                        @default(now())
  updatedAt                         DateTime                        @updatedAt

}

model Documentation {
   
  id                                Int                             @id @default(autoincrement())
  uuid                              String                          @unique @default(uuid())

  filled_state                      Int                             @default(0)
  binId                             String
  bin                               Bin                             @relation(fields: [binId], references: [uuid])

  createdAt                         DateTime                        @default(now())
  updatedAt                         DateTime                        @updatedAt

}

model Notification {
  
  id                                Int                             @id @default(autoincrement())
  uuid                              String                          @unique @default(uuid())

  note                              String
  type                              Type                            @default(AUTOMATIC)
  binId                             String
  bin                               Bin                             @relation(fields: [binId], references: [uuid])
  status                            Status                          @default(UNVIEWED)
  createdAt                         DateTime                        @default(now())
  updatedAt                         DateTime                        @updatedAt

}

enum Type {
  AUTOMATIC
  MANUAL
}

enum Status{
  UNVIEWED
  VIEWED
  DELETED
}

model Analytics {
  id                                Int                             @id @default(autoincrement())
  uuid                              String                          @unique @default(uuid())
  count                             Int

  binId                             String
  bin                               Bin                             @relation(fields: [binId], references: [uuid])
  
  createdAt                         DateTime                        @default(now())
  updatedAt                         DateTime                        @updatedAt
}



